name: MySugr-to-Nightscout
#run-name: Get MySugr Data (${{ github.ref_name }})
on:
  workflow_dispatch:
  schedule:     
    ## Schedule the job to run every 10th minute.
    - cron: '*/5 * * * *' 

jobs:
  get-mysugr-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Delete workflow runs
      id: delete-workflow-runs
      uses: MajorScruffy/delete-old-workflow-runs@v0.3.0
      env:
        GITHUB_TOKEN: ${{ secrets.API_SECRET }}
      with:
          repository: ${{github.repository}}
          older-than-seconds: 21600

    - name: Get MySugr Token
      id: mysugr-token
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://eu-prod-api.mysugr.com/rest/v2/users/me/auth/tokens/new'
        method: 'GET'
        username: '${{ secrets.MYSUGR_USER }}'
        password: '${{ secrets.MYSUGR_PASS }}'

    - name: Get MySugr Entries
      id: mysugr-entries
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://eu-prod-api.mysugr.com/rest/v2/logentries'
        retry: 3
        retryWait: 5000
        method: 'GET'
        contentType: "application/json"
        username: 'x'
        password: '${{ fromJson(steps.mysugr-token.outputs.response).userAuthenticationToken.token }}'
        customHeaders: '{"If-Modified-Since": "${{ vars.LASTMODIFIED }}"}'
        responseFile: ${{ env.home}}/entries.json

    - name: Transform MySugr Entries
      uses: cloudposse/github-action-jq@main
      id: mysugr-entries-to-nightscout
      with:
        compact: true
        input: ${{ env.home}}/entries.json 
        script: |-
          [ .logEntry | del(.[] | select( has("verifications") | not )) | del(.[] | select(.verifications[].logEntryAttribute != "bloodGlucoseMeasurement")) | .[] | {created_at: (.verifications[].date|todateiso8601), glucose: .bloodGlucoseMeasurement|round , glucoseType: "Finger", eventType: "BG Check", units: "mg/dl", utcOffset: 0, enteredBy: (.verifications[0].sourceType + "-" + .verifications[0].sourceId)} ]
    
    - name: Upload Entries to Nightscout
      id: upload-entries-to-nightscout
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://${{ secrets.NIGHTSCOUT_HOST }}/api/v1/treatments?token=${{ secrets.NIGHTSCOUT_TOKEN }}'
        method: 'POST'
        contentType: "application/json"
        data: ${{ steps.mysugr-entries-to-nightscout.outputs.output }}

    - name: Update Last Modified Variable
      id: mysugr-last-updated
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://api.github.com/repos/${{github.repository}}/actions/variables/${{secrets.API_VARIABLE_NAME}}'
        method: 'PATCH'
        bearerToken: '${{ secrets.API_SECRET }}'
        customHeaders: '{"Accept": "application/vnd.github+json", "X-GitHub-Api-Version": "2022-11-28"}'
        data: '{"name":"${{secrets.API_VARIABLE_NAME}}","value":${{ toJSON(fromJson(steps.mysugr-entries.outputs.headers).last-modified)}}}'
